use sakila;
-- 1. Retrieve the total number of rentals made in the Sakila database. Hint: Use the COUNT() function.
SELECT 
    COUNT(rental_id)
FROM
    rental;
-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database.Hint: Utilize the AVG() function.
SELECT 
    AVG(DATEDIFF(return_date, rental_date)) AS avg_rental_duration
FROM
    rental;
-- Question 3: Display the first name and last name of customers in uppercase. Hint: Use the UPPER () function.
SELECT 
    UPPER(first_name) AS first_name,
    UPPER(last_name) AS last_name
FROM
    customer;
-- Question 4: Extract the month from the rental date and display it alongside the rental ID. Hint: Employ the MONTH() function.
SELECT 
    rental_id, MONTH(rental_date) AS rental_month
FROM
    rental;
-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals). Hint: Use COUNT () in conjunction with GROUP BY.
SELECT 
    customer_id, COUNT(rental_id) AS count_rentals
FROM
    rental
GROUP BY customer_id;
-- Question 6: Find the total revenue generated by each store. Hint: Combine SUM() and GROUP BY. 
SELECT 
    s.store_id, SUM(p.amount) AS total_revenue
FROM
    store s
        JOIN
    staff sta ON s.manager_staff_id = sta.staff_id
        JOIN
    payment p ON sta.staff_id = p.staff_id
GROUP BY s.store_id;
-- Q7 Display the title of the movie, customer s first name, and last name who rented it. 
-- Hint: Use JOIN between the film, inventory, rental, and customer tables.
SELECT 
    film.title AS movie_title,
    customer.first_name,
    customer.last_name
FROM 
    rental
JOIN inventory ON rental.inventory_id = inventory.inventory_id
JOIN film ON inventory.film_id = film.film_id
JOIN customer ON rental.customer_id = customer.customer_id;
SELECT 
    film.title AS movie_title,
    customer.first_name,
    customer.last_name
FROM 
    rental
JOIN inventory ON rental.inventory_id = inventory.inventory_id
JOIN film ON inventory.film_id = film.film_id
JOIN customer ON rental.customer_id = customer.customer_id;
SELECT 
    film.title AS movie_title,
    customer.first_name,
    customer.last_name
FROM 
    rental
JOIN inventory ON rental.inventory_id = inventory.inventory_id
JOIN film ON inventory.film_id = film.film_id
JOIN customer ON rental.customer_id = customer.customer_id;
-- Question 8: Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
-- Hint: Use JOIN between the film actor, film, and actor tables.
SELECT 
    first_name, last_name
FROM
    actor
        JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        JOIN
    film ON film_actor.film_id = film.film_id
WHERE
    title = 'Gone with the Wind';
-- Question 9: Determine the total number of rentals for each category of movies. 
-- Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY
SELECT 
    fc.category_id, c.name, COUNT(rental_id) AS total
FROM
    film_category fc
        JOIN
    film f ON fc.film_id = f.film_id
        JOIN
    inventory i ON f.film_id = i.film_id
        JOIN
    rental r ON i.inventory_id = r.inventory_id
        JOIN
    category c ON fc.category_id = c.category_id
GROUP BY category_id , name
order by total;
-- 10 Find the average rental rate of movies in each language. Hint: JOIN film and language tables, then use AVG () and GROUP BY.
select lg.name as voice,  avg(rental_rate) from film as f
join language lg on f.language_id = lg.language_id group by lg.name;
-- Question 11select title, city from film;: Retrieve the customer names along with the total amount they've spent on rentals. 
-- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY. 
SELECT 
    c.customer_id, c.first_name, c.last_name, SUM(amount)
FROM
    customer AS c
        JOIN
    payment AS p ON c.customer_id = p.customer_id
        JOIN
    rental AS r ON p.rental_id = r.rental_id
GROUP BY customer_id , first_name , last_name;
-- Question 12: List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.
SELECT 
    group_concat(f.title),ctee.city,rental_rate 
FROM
    film AS f
        JOIN
    inventory AS i ON f.film_id = i.film_id
        JOIN
    rental AS r ON i.inventory_id = r.inventory_id
        JOIN
    customer AS c ON r.customer_id = c.customer_id
        JOIN
    address AS a ON c.address_id = a.address_id
        JOIN
    city as ctee  ON a.city_id = ctee.city_id
   where city= 'london'
   group by ctee.city,rental_rate 
   order by ctee.city,rental_rate ;
-- 13 Display the top 5 rented movies along with the number of times they've been rented. 
-- Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results.
select f.title , count(r.rental_id)as rented from film as f
join inventory as i on f.film_id= i.film_id
join rental as r on i.inventory_id=r.inventory_id
group by f.title
order by rented desc
limit 5;
-- 14 Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. 
 SELECT 
    c.customer_id,
    c.first_name,
    c.last_name
FROM 
    customer c
JOIN 
    rental r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
JOIN 
    store s ON i.store_id = s.store_id
WHERE 
    s.store_id IN (1, 2)
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(DISTINCT s.store_id) = 2;








    




















